{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","Fragment","id","for","type","name","onClick","e","preventDefault","document","getElementById","textContent","value","urlName","i","length","axios","get","then","res","$","cheerio","load","data","results","find","each","this","text","href","attr","forEach","elem","portName","createElement","setAttribute","addEventListener","url","catch","err","console","log","appendChild","style","marginTop","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qNAyFeA,MAnFf,WAmEE,OAFAC,qBAAU,eAEH,eAAC,IAAMC,SAAP,WACL,qBAAKC,GAAG,UAAR,SACE,iCACA,uBAAOC,IAAI,cAAX,2BACA,uBAAOC,KAAK,OAAOF,GAAG,cAAcG,KAAK,gBACzC,wBAAQC,QAzDU,SAACC,GAGrBA,EAAEC,iBAGFC,SAASC,eAAe,gBAAgBC,YAAY,GACpDF,SAASC,eAAe,eAAeC,YAAY,GAGnD,IAFA,IAAMN,EAAKI,SAASC,eAAe,eAAeE,MAC9CC,EAAQ,qCACHC,EAAE,EAAEA,EAAET,EAAKU,OAAOD,IACX,MAAVT,EAAKS,GACPD,GAASR,EAAKS,GAEdD,GAAS,QAIbG,IAAMC,IAAIJ,GACTK,MAAK,SAACC,GAEL,IAAMC,EAAEC,IAAQC,KAAKH,EAAII,MAGrBC,EAAQ,GAOZ,OANAJ,EAAE,mBAAmBK,KAAK,KAAKC,MAAK,SAASZ,GAC3CU,EAAQV,GAAG,CACTT,KAAKe,EAAEO,MAAMC,OACbC,KAAKT,EAAEO,MAAMG,KAAK,YAGfN,KAERN,MAAK,SAACC,GAEJA,EAAIY,SAAQ,SAACC,GACX,IAAMC,EAASxB,SAASyB,cAAc,OACtCD,EAASE,aAAa,OAAOH,EAAKH,MAClCI,EAAStB,YAAYqB,EAAK3B,KAC1B4B,EAASG,iBAAiB,SAAQ,WArDpB,IAACC,IAsDEL,EAAKH,KArD3Bb,IAAMC,IAAIoB,GACTnB,MAAK,SAACC,GACL,IAAMC,EAAEC,IAAQC,KAAKH,EAAII,MACpBH,EAAE,aAAaQ,OAGlBnB,SAASC,eAAe,eAAeC,YAAaS,EAAE,aAAaQ,OAFnEnB,SAASC,eAAe,eAAeC,YAAY,qCAMtD2B,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,SA6CnB9B,SAASC,eAAe,gBAAgBgC,YAAYT,SAGxDK,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OAYtB,yBAIF,qBAAKrC,GAAG,iBACR,qBAAKA,GAAG,cAAcyC,MAAO,CAACC,UAAU,QAAQC,SAAS,cCvE9CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASC,eAAe,SAM1BoC,K","file":"static/js/main.22c99c20.chunk.js","sourcesContent":["\nimport './App.css';\nimport React,{ useEffect } from 'react';\nimport axios from 'axios';\nimport cheerio from 'cheerio';\n\nfunction App() {\n  const getAirportData=(url)=>{\n    axios.get(url)\n    .then((res)=>{\n      const $=cheerio.load(res.data);\n      if (!$('#aptcomms').text()){\n        document.getElementById('airportData').textContent='NOTHING FOUND, FUCK YOU ~~C===3';\n      }else{\n        document.getElementById('airportData').textContent=($('#aptcomms').text());\n      }\n      \n    })\n    .catch(err=>console.log(err))\n  }\n\n  const getAirportNames=(e)=>{\n\n    //block form from auto-submitting\n    e.preventDefault();\n\n    //empties fields, extract input airport name, fetch possible airports from skyvector\n    document.getElementById('airportNames').textContent=\"\";\n    document.getElementById('airportData').textContent=\"\";\n    const name=document.getElementById('airportName').value;\n    var urlName=\"https://skyvector.com/search/site/\";\n    for (var i=0;i<name.length;i++){\n      if (name[i]!==\" \"){\n        urlName+=name[i];\n      }else{\n        urlName+=\"%2520\";\n      }\n    }\n\n    axios.get(urlName)\n    .then((res)=>{\n      //parses string html into virtual DOM\n      const $=cheerio.load(res.data);\n\n      //extracts port names + hrefs from DOM\n      var results=[];\n      $('.search-results').find('a').each(function(i){\n        results[i]={\n          name:$(this).text(),\n          href:$(this).attr('href')\n        }\n      });\n      return results;\n    })\n    .then((res)=>{\n      //displays results on UI and loads onClick listener to get its respective data\n       res.forEach((elem)=>{\n         const portName=document.createElement('div');\n         portName.setAttribute('href',elem.href);\n         portName.textContent=elem.name;\n         portName.addEventListener('click',()=>{\n           getAirportData(elem.href);\n         })\n         document.getElementById('airportNames').appendChild(portName);\n       })\n    })\n    .catch(err=>console.log(err))\n\n    \n  }\n\n  useEffect(()=>{});\n\n  return <React.Fragment>\n    <div id=\"mainApp\">\n      <form>\n      <label for='airportName'>AIRPORT NAME?</label>\n      <input type=\"text\" id='airportName' name='airportName'></input>\n      <button onClick={getAirportNames}>SUBMIT</button>\n      </form>\n    </div>\n\n    <div id='airportNames'></div>\n    <div id='airportData' style={{marginTop:'100px',fontSize:'25px'}}></div>\n\n    </React.Fragment>\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}